#channel manager needs the Exleveldb removed too.
defmodule DB do
	def put_lock(loc, g) do
		path = System.cwd <> "/dbs" #different in windows?
		File.mkdir(path)
		x = File.open(path <> loc)
		#x = Exleveldb.open(path <> loc)
		IO.puts("leveldb #{inspect x}")
		{status, pid} = x
		case status do
			:ok ->
				#we have a lock on the db, so no one else can use it till we are done.
				out = g.(pid)
				File.close(pid)#unlock
				out
			:error ->#someone else has a lock on the db.
				:timer.sleep(5)
				put_lock(loc, g)
			true -> IO.puts("db broke")
		end
	end
	def put_function(loc, f) do Task.start_link(fn() -> put_lock(loc, fn(pid) -> IO.binwrite(pid, PackWrap.pack(f.()))	end) end)	end
	
	
	def get_raw(loc) do
		path = System.cwd <> "/dbs" #different in windows?
		File.mkdir(path)
		bin = File.read(path <> loc)
		if bin == "" do
			""
		else
			bin |> PackWrap.unpack
		end
	end

	def put_get(loc) do
		current = get_raw(loc)
		if current == "" do current = %{} end
		current
	end
	def put_dict(loc, key, value) do
		put_function(loc, fn(db) ->
			current = put_get(loc)
			Dict.put(current, key, value)
		end)
	end
	def get_dict(loc, key) do
		current = put_get(loc)
		Dict.get(current, key)
	end
		
	
	
	#def put(key, val, loc) do
	#		f = fn(db) ->
	#			db = PackWrap.upack(db)
	#			
	#		end
	#		Task.start_link(fn() -> db_lock(loc, f))
	#	end
			#Exleveldb.put(db, key, PackWrap.pack(val), []) end) end) end
	#def get(key, loc) do db_lock(loc, fn(db) -> Exleveldb.get(db, key, []) end) |> elem(1) |> PackWrap.unpack end
end
defmodule Leveldb do
	def db_lock(loc, f) do
		path = System.cwd <> "/dbs" #different in windows?
		File.mkdir(path)
		x = Exleveldb.open(path <> loc)
		IO.puts("leveldb #{inspect x}")
		{status, db} = x
		case status do
			:ok ->
				#we have a lock on the db, so no one else can use it till we are done.
				out = f.(db)
				Exleveldb.close(db)#unlock
				out
			:error ->#someone else has a lock on the db.
				:timer.sleep(5)
				db_lock(loc, f)
			true -> IO.puts("db broke")
		end
	end
	def put(key, val, loc) do Task.start_link(fn() -> db_lock(loc, fn(db) -> Exleveldb.put(db, key, PackWrap.pack(val), []) end) end) end
	def get(key, loc) do db_lock(loc, fn(db) -> Exleveldb.get(db, key, []) end) |> elem(1) |> PackWrap.unpack end
end
